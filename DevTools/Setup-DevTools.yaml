AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  DevOpsAccount:
    Description: DevOpsAccount
    Type:  String
  DevAccount:
    Description: DevAccount
    Type:  String
  HomologAccount:
    Description: HomologAccount
    Type:  String
  ProdAccount:
    Description: ProdAccount
    Type:  String
  TemplateURL:
    Description: TemplateURL
    Type:  String
    Default: "https://buenoh.s3.amazonaws.com/cfn-templates/"

Resources:

  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by Assumed Roles in Dev/Hml/Ppr/Prod accounts to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          -
            Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource: "*"
          -
            Sid: Allow use of key in another account
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${DevOpsAccount}:root
                - !Sub arn:aws:iam::${DevAccount}:root
                - !Sub arn:aws:iam::${HomologAccount}:root
                - !Sub arn:aws:iam::${ProdAccount}:root
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: "alias/kmsalias-key" 
      TargetKeyId: !Ref KMSKey

  BucketArtifact:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${KMSAlias}'
              SSEAlgorithm: 'aws:kms'

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketArtifact
      PolicyDocument: 
        !Sub > 
          {
              "Version": "2012-10-17",
              "Id": "SSEAndSSLPolicy",
              "Statement": [
                  {
                      "Sid": "",
                      "Effect": "Allow",
                      "Principal": {
                          "AWS": [
                            "arn:aws:iam::${AWS::AccountId}:root",
                            "arn:aws:iam::${DevOpsAccount}:root",
                            "arn:aws:iam::${DevAccount}:root",
                            "arn:aws:iam::${HomologAccount}:root",
                            "arn:aws:iam::${ProdAccount}:root"
                          ]
                      },
                      "Action": [
                          "s3:Get*",
                          "s3:Put*"
                      ],
                      "Resource": "arn:aws:s3:::${BucketArtifact}/*"
                  },
                  {
                      "Sid": "",
                      "Effect": "Allow",
                      "Principal": {
                          "AWS": [ 
                            "arn:aws:iam::${AWS::AccountId}:root",
                            "arn:aws:iam::${DevOpsAccount}:root",
                            "arn:aws:iam::${DevAccount}:root",
                            "arn:aws:iam::${HomologAccount}:root",
                            "arn:aws:iam::${ProdAccount}:root"
                          ]
                      },
                      "Action": "s3:ListBucket",
                      "Resource": "arn:aws:s3:::${BucketArtifact}"
                  }
              ]
          }          

  CodePipeLineServiceRole:
    Type: "AWS::IAM::Role"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F3
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - lambda.amazonaws.com
                - codebuild.amazonaws.com
                - cloudformation.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
       -
          PolicyName: "CodePipelinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetBucketPolicy"
                Resource: "*"
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:*"
                  - "lambda:*"
                  - "iam:*"
                  - "events:*"
                Resource: "*"
              -
                Effect: "Allow"
                Action:
                  - "ssm:GetParameters"
                  - "ssm:GetParameter"
                  - "ssm:GetParametersByPath"
                  - "ssm:GetParameterHistory"
                  - "ssm:PutParameter"
                Resource: "*" 
              -
                Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                  - "codecommit:UploadArchive"
                  - "codecommit:GetBranch" 
                Resource: "*"               
              -
                Effect: "Allow"
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Resource:
                  - !Sub "arn:aws:iam::${DevOpsAccount}:role/RoleCrossAccount"
                  - !Sub "arn:aws:iam::${DevAccount}:role/RoleCrossAccount"
                  - !Sub "arn:aws:iam::${HomologAccount}:role/RoleCrossAccount"
                  - !Sub "arn:aws:iam::${ProdAccount}:role/RoleCrossAccount"
              -
                Effect: Allow
                Action:
                  - "kms:Encrypt"
                  - "kms:Decrypt"
                  - "kms:ReEncrypt*"
                  - "kms:GenerateDataKey*"
                  - "kms:DescribeKey"
                Resource: !GetAtt KMSKey.Arn 

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F3
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetBucketPolicy
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - Fn::Sub:
                        - "arn:aws:s3:::${BucketName}/*"
                        - BucketName: !Ref BucketArtifact
                  - Fn::Sub:
                        - "arn:aws:s3:::${BucketName}"
                        - BucketName: !Ref BucketArtifact
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              -
                Effect: Allow
                Action:
                  - "kms:Encrypt"
                  - "kms:Decrypt"
                  - "kms:ReEncrypt*"
                  - "kms:GenerateDataKey*"
                  - "kms:DescribeKey"
                Resource: !GetAtt KMSKey.Arn


  CodeCommitRepositoryInfraBase:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: cfn-produto
      RepositoryDescription: Repositorio de CloudFormation Shared para todo o Produto

  PipelineInfra: 
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipeLineServiceRole.Arn
      Name: !Ref AWS::StackName
      ArtifactStore:
        Type: S3
        Location: !Ref BucketArtifact
        EncryptionKey:
          Id: !GetAtt KMSKey.Arn
          Type: KMS
    
      Stages: 
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              Configuration:
                BranchName: master
                RepositoryName: cfn-produto
              OutputArtifacts:
                - Name: Out-Source
              RunOrder: 1
        - Name: Test
          Actions:
            - Name: Cfn-Lint
              ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
              OutputArtifacts:
                - Name: Out-Cfn-Lint
              InputArtifacts:
                - Name: Out-Source
              Configuration:
                  ProjectName: !Ref CfnLint
              RunOrder: 1
            - Name: Cfn_Nag
              ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
              OutputArtifacts:
                - Name: Out-Cfn-Nag
              InputArtifacts:
                - Name: Out-Source
              Configuration:
                  ProjectName: !Ref CfnNag
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE 
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CodePipeLineServiceRole.Arn
                StackName: SetupProduto
                ChangeSetName: SetupProduto-ChangeSet
                TemplatePath: !Join [ "::", [ "Out-Source", "templates/Setup-Produto.yaml"]]
              InputArtifacts:
                - Name: Out-Source
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: SetupProduto-ChangeSet
                RoleArn: !GetAtt CodePipeLineServiceRole.Arn
                StackName: SetupProduto
              RunOrder: 2

  CfnLint:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: CFN-Lint 
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'buildspecs/buildspec-cfn-lint.yml'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Ref CodeBuildServiceRole
      TimeoutInMinutes: 10

  CfnNag:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: CFN_NAG 
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'buildspecs/buildspec-cfn_nag.yml'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/ruby:2.5.3
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Ref CodeBuildServiceRole
      TimeoutInMinutes: 10

  KMSKeyArnParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Shared/KMSKeyArn"
      Type: "String"
      Value: !GetAtt KMSKey.Arn
      Description: "KMSKeyArn"

  KMSAliasParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Shared/KMSAlias"
      Type: "String"
      Value: !Ref KMSAlias
      Description: "KMSAlias"

  DevAccountParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Accounts/Dev"
      Type: "String"
      Value: !Ref DevAccount
      Description: "ID da conta de Desenvolvimento"

  HomologAccountParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Accounts/Homolog"
      Type: "String"
      Value: !Ref HomologAccount
      Description: "ID da conta de Homolog"

  ProdAccountParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Accounts/Prod"
      Type: "String"
      Value: !Ref ProdAccount
      Description: "ID da conta de Prod"

  DevOpsAccountParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Accounts/DevOps"
      Type: "String"
      Value: !Ref DevOpsAccount
      Description: "ID da conta de DevOps"

  CodePipeLineServiceRoleParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Roles/CodePipeline"
      Type: "String"
      Value: !GetAtt CodePipeLineServiceRole.Arn
      Description: "CodePipeLineServiceRole"

  CodeBuildServiceRoleParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Roles/CodeBuild"
      Type: "String"
      Value: !GetAtt CodeBuildServiceRole.Arn
      Description: "CodeBuildServiceRole"

  TemplateURLParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Shared/TemplateURL"
      Type: "String"
      Value: !Ref TemplateURL

  BucketArtifactParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/Shared/BucketArtifact"
      Type: "String"
      Value: !Ref BucketArtifact
      Description: "BucketArtifact"