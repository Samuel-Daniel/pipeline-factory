version: 0.2
env:
  parameter-store:
    SONARQUBE_TOKEN: "SonarQubeToken"
    SONARQUBE_ENDPOINT: "SonarQubeEndpoint"
phases:
  install:
    runtime-versions:
      java: openjdk8
      dotnet: 2.2
    commands:
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:./sonar-scanner-3.3.0.1492-linux/bin/
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - cp $CODEBUILD_SRC_DIR_Build/*.dll $CODEBUILD_SRC_DIR_App/ 
  build:
    commands:
      - cd $CODEBUILD_SRC_DIR_App
      - echo Executing a testUnit
      - dotnet test test/BYM_UGE.UnitTests
      - echo Executing a sonar test
      - sonar-scanner
      - echo Building the Docker image...                
      - docker build -t $REPOSITORY:latest .      
      - docker tag $REPOSITORY:latest $REPOSITORY:$IMAGE_TAG
  post_build:
    commands:
       - echo Pushing the Docker images...
       - docker images
       - docker push $REPOSITORY:latest
       - docker push $REPOSITORY:$IMAGE_TAG
       - printf '[{"name":"cluster-secret","imageUri":"%s"}]' $REPOSITORY:$IMAGE_TAG > build.json   
       - cat build.json
artifacts:
    files:
       - $CODEBUILD_SRC_DIR_App/build.json 
       - src/BYM_UGE/bin/Debug/netcoreapp2.1/*.dll
    discard-paths: yes
